// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Shift-space {
            bindings = <&kp LS(SPACE)>;
            key-positions = <>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp F  &kp P        &kp B            &kp J        &kp L                 &kp U      &kp Y    &lt 3 SQT
&kp A  &kp R  &kp S  &kp T        &kp G            &kp M        &kp N                 &kp E      &kp I    &kp O
&kp Z  &kp X  &kp C  &kp D        &kp V            &kp K        &kp H                 &kp COMMA  &kp DOT  &kp QUESTION
                     &lt 2 ENTER  &kp BACKSPACE    &lt 3 SPACE  &lt 1 K_CONTEXT_MENU
            >;
        };

        navigation {
            bindings = <
&none  &kp END   &kp UP_ARROW  &kp HOME   &none      &none  &none             &none           &none                 &bootloader
&none  &kp LEFT  &kp DOWN      &kp RIGHT  &none      &none  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LS(LEFT_CONTROL)  &none
&none  &none     &none         &none      &none      &none  &none             &none           &none                 &none
                               &kp TAB    &kp ESC    &none  &none
            >;
        };

        numpad {
            bindings = <
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT          &kp PLUS   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp ASTERISK
&kp DQT   &kp LBKT  &kp LBRC  &kp LPAR  &default_report    &kp MINUS  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp SLASH
&kp SQT   &kp RBKT  &kp RBRC  &kp RPAR  &bootloader        &none      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none
                              &none     &none              &kp ENTER  &kp KP_NUMBER_0
            >;
        };

        other_shit {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &bootloader     &bootloader   &out OUT_TOG   &none           &kp C_MUTE    &kp C_PREV
&kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1    &bt BT_SEL 3  &kp C_BRI_UP   &studio_unlock  &kp C_VOL_UP  &kp C_PP
&kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR      &bt BT_SEL 4  &kp C_BRI_DEC  &trans          &kp C_VOL_DN  &kp C_NEXT
                          &trans   &trans          &trans        &trans
            >;
        };
    };
};
